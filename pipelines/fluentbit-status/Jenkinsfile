def commonModule = [:]

pipeline {
    agent {
        label 'master'
    }
    environment {
        PATH = "/sw_ux/node/current/bin:/sw_ux/bin:$PATH"
        VAULT_ADDR = "https://vault-iit.apps.silver.devops.gov.bc.ca"
        AGENT_ROOT = "/apps_ux/agents"
        BROKER_URL = "https://nr-broker.apps.silver.devops.gov.bc.ca"
        CONFIG_ROLE_ID = credentials('knox-vault-jenkins-isss-role-id')
        NR_BROKER_JWT = credentials('nr-broker-jwt')
    }
    stages {
        stage('Setup') {
            steps {
                script {
                    commonModule = load "pipelines/common.groovy"
                    env.CAUSE_USER_ID = commonModule.getCauseUserId()
                }
            }
        }
        stage('Checkout Config') {
            steps {
                checkout([
                    $class: 'GitSCM',
                    branches: [[name: '*/main']],
                    doGenerateSubmoduleConfigurations: false,
                    extensions: [
                        [$class: 'RelativeTargetDirectory', relativeTargetDir: 'fb'],
                        [$class: 'SparseCheckoutPaths',  sparseCheckoutPaths:[
                            [$class:'SparseCheckoutPath', path: "config/server"],
                            [$class:'SparseCheckoutPath', path: "config/base.json"]
                        ]]
                    ],
                    submoduleCfg: [],
                    userRemoteConfigs: [
                        [
                            credentialsId: 'f1e16323-de75-4eac-a5a0-f1fc733e3621',
                            url: 'https://bwa.nrs.gov.bc.ca/int/stash/scm/oneteam/oneteam-nr-funbucks.git'
                        ]
                    ]
                ])
            }
        }
        stage('Get credentials') {
            steps {
                script {
                    env.INTENTION_JSON = sh(
                        returnStdout: true,
                        script: "set +x; scripts/broker_intention_open.sh scripts/intention-fb-configure.json"
                    )
                    sh "scripts/broker_intention_action.sh start server-access"
                    env.VAULT_TOKEN = sh(
                        returnStdout: true,
                        script: "set +x; scripts/vault_token.sh"
                    )
                }
            }
        }
        stage('Status') {
            steps {
                sh "scripts/fluentbit_status.sh"
                sh "set +x; VAULT_ADDR=$VAULT_ADDR VAULT_TOKEN=$VAULT_TOKEN /sw_ux/bin/vault token revoke"
                sh "scripts/broker_intention_action.sh end server-access"
            }
        }
    }
    post {
        success {
            sh "set +x; scripts/broker_intention_close.sh 'success'"
        }
        unstable {
            sh "set +x; scripts/broker_intention_close.sh 'failure'"
        }
        failure {
            sh "set +x; scripts/broker_intention_close.sh 'failure'"
        }
    }
}
